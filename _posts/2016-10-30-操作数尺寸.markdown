---
layout: post
author: LPF
title: 操作数尺寸
date: 2016-10-30 13:38:45
updated: 2017-02-21 16:17:59
tags:
- 80x86
categories:
- Study
- Computer
- PL
- Asm
- 80x86
---

## 1 指定操作数尺寸

80x86上的汇编器通过两种机制指定操作数尺寸：

- 操作数使用类型检查来说明尺寸——多数汇编器
- 指令本身指定了尺寸——Gas汇编器

## 2 HLA指定操作数尺寸

```asm
mov(0, al);     //8位传送
mov(0, ax);     //16位传送
mov(0, eax);    //32位传送
```

上述每个情况里都由寄存器操作数说明了**mov**指令传送到那个寄存器的数据尺寸，**MASM**/**TASM**采用类似的语法，只不过调换操作数的位置。

## 3 HLA类型强制

考虑下列示例：

```asm
mov(0, [ebx]); //将0复制到地址为[ebx]的内存单元
```

该指令是含糊不清的，因为**ebx**指向的内存位置可以是字节、字或双字，指令并未把操作数的尺寸告诉给汇编器，因此会报错。所以要明确给出内存操作数尺寸，如：

```asm
mov(0, (type word [ebx])); //16位数据传送
```

通常使用下列**HLA**语法将任何内存操作数强制成适当尺寸：

```asm
(type new_type memory)
```

其中*new_type*表示**byte**、**word**或**dword**等数据类型，*memory*为要强制类型的内存地址。

## 4 MASM和TASM的类型强制

```asm
mov word ptr [ebx], 0   ;16位传送
```

**MASM**和**TASM**同样需要明确说明数据尺寸，如上例所示。

## 5 Gas的类型强制

**Gas**汇编器无需强制运算符，因为他使用指令助记符明确说明数据尺寸。

- **movb** 传送8位数据
- **movw** 传送16位数据
- **movl** 传送32位数据

