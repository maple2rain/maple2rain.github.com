title: Insert语句
date: 2016-10-30 09:29:00
updated: 2017-02-21 15:15:43
categories:
- Study
- DataBase
- MySQL
---

## 1 数据插入

**INSERT**语句是用来添加行到数据库表的。

插入可以用以下几种方式：

- 插入完整的行
- 插入行的一部分
- 插入多行
- 插入某些查询的结果

### 2 插入完整的行

```SQL
INSERT INTO productNotes
VALUE(
    NULL,           #noteID列，若被设置为自动增量时，可以指定为NULL使其自增
    '2',            #prodID列，表示其内容为2
    'It is a text'  #noteText列，表示其文本内容为It is a text
);
```

上述例子中，将VALUE框中的每个数据都存储到相应列中，内容写在**单引号*之间，并以**逗号**分隔开。
不过，上述方法并不安全，因为该语句高度依赖于表中列定义的次序。为避免插入顺序有误，可以预先指定好列(不一定要按照实际表中的顺序)，如下：

```SQL
INSERT INTO
productNotes(
    noteID,
    prodID,
    noteText
)#指明要插入的列
VALUE(#按照上面给的顺序便可以一目了然的插入数据
    NULL,           #noteID列，若被设置为自动增量时，可以指定为NULL使其自增
    '2',            #prodID列，表示其内容为2
    'It is a text'  #noteText列，表示其文本内容为It is a text
);
```

### 2.1 可以省略的列

- 该列定义为允许NULL值
- 在表定义中给出默认值

### 2.2 提高整体性能

数据库经常被多个客户访问，对处理什么请求以及用什么次序处理进行管理是MySQL的任务。INSERT操作可能很耗时（特别是有很多索引需要更新时），而且它可能降低等待处理的SELECT语句的性能。
如果数据检索是最重要的（通常是这样），则可以通过在INSERT和INTO之间添加关键字LOW_PRIORITY，指示MySQL降低INSERT语句的优先级，如下所示：

```
INSERT LOW_PRIORITY INTO
```

## 3 插入多个行 

当列名和次序相同时，可以快速的插入多个行，每行的**VALUE**以逗号隔开，如下：

```SQL
INSERT INTO 
productNotes(
    noteID,
    prodID,
    noteText
)#指明要插入的列
VALUE(
    NULL,           #noteID列，若被设置为自动增量时，可以指定为NULL使其自增
    '2',            #prodID列，表示其内容为2
    'It is a text'  #noteText列，表示其文本内容为It is a text
),#逗号分隔多个VALUE
    (
    NULL,           #noteID列，若被设置为自动增量时，可以指定为NULL使其自增
    '3',            #prodID列，表示其内容为3
    'It is a text'  #noteText列，表示其文本内容为It is a text
);
```

## 4 插入检索出的数据

当想从一张表合并到另一张表时，可以采用插入检索的方式而不用每一行手动输入。

```
INSERT INTO 
productNotes(
    noteID,
    prodID,
    noteText
)#指明要插入的列
SELECT
    noteID,
    prodID,
    noteText
FROM oldNotes;#从oldNotes表中提取出列值并插入到productNotes表中
```

### 4.1 INSERT SELECT中的列名

**不一定要求列名匹配。**
事实上，**MySQL**甚至不关心**SELECT**返回的列名。它使用的是列的位置，因此SELECT中的第一列（不管其列名）将用来填充表列中指定的第一个列，第二列将用来填充表列中指定的第二个列，如此等等。
这对于从使用不同列名的表中导入数据是非常有用的。
