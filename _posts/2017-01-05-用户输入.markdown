title: 用户输入
date: 2017-01-05 17:01:07
updated: 2017-01-05 17:03:14
tags:
- Linux Shell
categories:
- Study
- Computer
- OS
- Linux
- API
- Shell
- User Input
---
## 1 命令行输入

向**shell**脚本传数据的最基本方法是使用命令行参数。

```bash
./test.sh argc1 argc2 ..
```

执行**test.sh**脚本时，会将**argc1**及**argc2**等作为参数。

## 2 读取参数

**bash shell**会将一些称为**位置参数(positional parameter)**的特殊变量分配给命令行输入的所有参数

- 位置参数变量

    位置变量参数是标准的数字：

       + \$0是程序名
       + \$1是第一个参数
       + \$2是第二个参数
       + \$n是第n个参数

    + 每个参数以空格分开
    + 参数可以是数值或字符串；若字符串含有空格时，需要用引号将其括住

## 3 读取程序名

当传给**$0**变量的真实字符串是整个脚本的路径时，程序中就会使用整个路径，而不仅仅是程序名。
**basename**命令会返回脚本程序名而不包括路径：

```sh
name=`basename $0`
```

上述例子中，变量**name**将获得执行该脚本的程序名而不是完整路径名。

## 4 测试参数

当脚本认为参数变量中会有数据而实际上没有时，很可能会从脚本得到一个错误消息，因此在使用数据之前检查数据确实存在于变量中很有必要。

在**test**命令中使用**-n**参数来检查命令行中参数是否有数据：

```sh
if [ -n "$1" ]
then 
    echo "argc 1 does exist"
else
    echo "argc 1 doesn't exist"
fi
```

## 5 特殊参数变量

| 参数变量 |                 描述                |
|----------|-------------------------------------|
| $#       | 代表参数个数                        |
| ${!#}    | 最后一个参数值                      |
| $*       | 将所有参数当成一个参数对待          |
| $@       | 通过使用**for**命令访问所有参数变量 |

### 5.1 参数计数

**$#**特殊变量含有脚本运行时就有的命令行参数的个数(不包含程序名)。

- 当命令行上没有参数时，**$#**的值为0

**${!#}**代表最后一个参数的值。

- 当命令行上没有参数时，**${!#}**变量会返回命令行所用到的脚本名

### 5.2 抓取数据

**$\***会将命令行上提供的所有参数当做单个单词保存，每个词是指命令行上出现的每个值，即将这些值当成是一个参数

**$@**会将命令行上提供的所有参数独立对待，允许对参数分隔，通常使用**for**命令遍历所有参数。
