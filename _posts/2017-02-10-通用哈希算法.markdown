title: 通用哈希算法
date: 2017-02-10 17:07:59
updated: 2017-02-10 22:19:16
tags:
- Algorithm
categories:
- Study
- Algorithm
---
## 1 Peter Weinberger 版本

```c
#include <limits.h>
#define BITS_IN_int (sizeof (int) * CHAR_BIT)
#define THREE_QUARTERS ((int) ((BITS_IN_int * 3) / 4))
#define ONE_EIGHTH ((int) (BITS_IN_int / 8))
#define HIGH_BITS ( ~((unsigned int)(~0) >> ONE_EIGHTH ))

unsigned int HashPJW(const char * datum)
{
    unsigned int hash_value, i;

    for (hash_value = 0; *datum; ++datum){
        hash_value = (hash_value << ONE_EIGHTH) + *datum;
        if ((i = hash_value & HIGH_BITS) != 0){
            hash_value =
                (hash_value ^ (i >> THREE_QUARTERS)) & (~HIGH_BITS);
        }
    }

    return hash_value;
}

```

## 2 ELF hash版本

```c
unsigned long ElfHash(const unsigned char *name)
{
    unsigned long h = 0, g;
    while (*name){
        h = (h << 4) + *name++;
        if (g = h & 0xF0000000)
            h ^= g >> 24;

        h &= ~g;
    }

    return h;
}
```