title: crypt复习纲要
date: 2017-05-31 20:23:01
updated: 2017-06-05 20:00:42
categories:
- School
---
# 密码学复习纲要

## 1 信息安全概论

### 信息安全问题的根源

- 微机的安全结构过于简单
	- 微机是个人计算机
	- 去掉了许多成熟的安全机制
		- 存储器的隔离保护
		- 程序校验
	- 程序的执行不经过认证
	- 执行程序可被随意修改
	- 系统区域的数据随意修改
	- 病毒、蠕虫、木马
- 信息技术的发展使微机变成了公用计算机
- 网络的发展使微机变成网络中的一部分
	- 网络连接突破了计算机机房的地理隔离
	- 信息的I/O扩大到了整个网络
	- Internet网络缺少安全设计
	- Internet网络无政府状态
	- 正确的协议也可被利用进行攻击 DOS
- 操作系统存在安全缺陷

### 设备安全的概念

信息设备的安全是信息系统安全的**首要问题**。

- 稳定性：设备在一定时间内不出故障的概率
- 可靠性：设备能在一个给定时间内正常执行任务的概率
- 可用性：设备随时可以正常使用的概率

### 数据安全

采取措施确保数据免受未授权的泄漏、篡改和毁坏。

- 秘密性：数据不被未授权者知晓的属性
- 完整性：数据是正确的、真实的、未被篡改的、无缺失的
- 可用性：数据是随时可以使用的

### 内容安全

内容安全是信息安全在法律、政治、道德层次上的要求。

- 政治上健康
- 符合国家法律法规
- 符合中华民族优良的道德规范

### 行为安全

- 行为安全是信息安全的**终极目的**。
- 符合哲学上实践是检验真理的唯一标准的原理。
	- 秘密性：行为不能危害数据秘密性，需要时行为本身也是秘密的
	- 完整性：行为不能危害数据完整性，行为的过程和目标是预期的
	- 可控性：当行为的过程出现偏离预期时，能够发现、控制或纠正

### 方法论

1. 永不接受任何我自己不清楚的真理。对自己不清楚的东西，不管是什么权威的结论，都可以怀疑。
2. 将要研究的复杂问题，尽量分解为多个比较简单的小问题，一个一个地解决。
3. 将这些小问题从简单到复杂排序，先从容易解决的问题入手。
4. 将所有问题解决后，再综合起来检验，看是否完全，是否将问题真正解决了。

## 2 密码学的基本概念

### 密码分级

- 核心密码：用于保护党、政、军的核心机密
- 普通密码：用于保护国家和事企业单位的低于核心机密而高于商用的机密信息
- 商用密码：用于保护国家和事企业单位的非机密的敏感信息
- 个人密码：用于保护个人的隐私信息

### 密码政策

- 统一领导：国家密码管理局统一领导
- 集中管理：国家密码管理局办公室集中管理
- 定点研制：只允许定点单位进行研制
- 专控经营：经许可的单位才能经营
- 满足使用：国内各单位都可申请使用

### 密码分类

从加密钥与解密钥是否相等划分：
加密钥$K_e$，解密钥$K_d$

- 传统密码(DES,AES,SMS4,RC4)
	- $K_e$=$K_d$
	- 容易由$K_e$推出$K_d$
- 公开密钥(RSA,Elgamal,ECC)
	- $K_e$≠$K_d$
	- 且由$K_e$不能计算出$K_d$
	- 可将$K_e$公开也不会危害$K_d$的安全

从密钥的使用方式划分：

- 序列密码(RC4)
	- 明文、密文、密钥以位为单位加解密
	- 核心密码的主流
- 分组密码(DES,AES,SMS4)
	- 明文、密文、密钥以分组为单位加解密
	- 商用密码的主流
  
从密码算法是否变化划分

- 固定密码算法(AES,DES,RSA,RC4,Elgamal)
	- 密码在工作过程中算法固定不变，密钥可变
	- 迄今为止的绝大多数密码都是固定算法密码
	
### 密码学理论基础

- 信息论
	- 从信息在信道传输中可能受到攻击，引入密码理论
	- 提出以 **扩散**、**混淆** 和 **乘积迭代** 等基本方法设计密码
	- 阐明了密码体制，完善保密，理论保密和实际保密等概念
- 计算复杂性理论
	- 密码的安全性以计算复杂度来度量
	- 现代密码往往建立在一个数学难题之上，而**难**是计算复杂度的概念
	- 计算复杂度只能为密码提供一个必要条件
- 密码设计的基本方法
	- 公开设计原则
		密码的安全应仅依赖于对密钥的保密，不依赖于对算法的保密
	- 扩散和混淆
		- 扩散 (diffusion) ： 将明文和密钥的每一位的影响散布到尽量多的密文位中；理想情况下达到完备性
		- 混淆 (confusion) : 使明文、密钥和密文之间的关系复杂化
	-  迭代与乘积
		- 迭代：设计一个轮函数，然后迭代
		- 乘积：将几种密码联合应用

## 3 DES

### 密码整体特点

- 明文、密文和密钥的分组长度都是64位
- 加密和解密共用同一算法
- 能够加密任何形式的计算机数据
- 综合运用了置换、代替、代数等基本密码技术

### 加密过程

- 64位密钥经子密钥产生算法产生16个子密钥
- 子密钥产生
	- 去掉密钥中的8个奇偶校验位
	- 打乱重排，形成左右各28位
	- 选出一个48位的子密钥
- 由于IP公开，所以IP置换保密作用不大
- S盒是DES中唯一的非线性变换，是DES安全的关键
	- 共有8个S盒，并行作用
	- 在保密性方面，起混淆作用
	- 每个S盒由6个输入，4个输出，是非线性压缩变换
- S盒设计准则
	- 每个S盒的输出不是他的输入的线性或仿射函数
	- 改变S盒的任一输入比特，其输出至少由两比特发生改变
	- 差分均匀性准则：S盒的差分性应均匀，否则不能抵抗差分攻击
- 置换运算P
	- 在保密性方面，起扩散作用

### 3DES的优势

- 3密钥的3DES，密钥长度是168位
- 2密钥的3DES，密钥长度是112位

## 4 AES

### AES的设计要求

- 安全性： 可以抵抗目前的所有已知攻击
- 实用性：适应各种应用环境，加解密速度快
- 扩展性： 分组长度和密钥长度可扩展，可以适应社会对保密性不断提高的需求

### 整体特点

- 分组密码
	- 明文盒密文长度为128位，密钥长度可变(128,192,256,现在取128)
- 能够加密任何形式的计算机数据
- 不是对合运算
- AES使用16个**相同**的S盒(解密时使用的是逆S盒)，DES使用8个**不同**的S盒
- AES的S盒有8位输入8位输出，是一种非线性置换
- DES的S盒有6位输入4位输出，是一种非线性压缩
- 轮转次数为10-14(偶数)，与明文及密钥长度都有关。


## 5 中国商用密码

### 概况

- 分组密码，数据分组长度128位，密钥长度128位；数据处理单位，字节(8b)，字(32b)，共32个轮密钥
- 对合运算，解密算法与加密算法相同
- 子密钥生成算法与加密算法结构类似

### S盒置换规则

![](../post_img/593025ccab644123cb001ac0)

- 以输入的前半字节为行号，后半字节为列号，行列交叉点处的数据即为输出。
- 举例： 设输入为 “ ef ” ， 则行号为 e ， 列号为 f ， 于是 S 盒的输出值为表中第 e 行和第 f 列交叉点的值，
Sbox ('ef') = 84
说明：在主要密码学指标上达到最佳，与 AES 的 S 盒相当

- 非线性字变换 τ ： 32 位字的非线性变换
    - 4 个 S 盒并行置换
    - 设输入字 A =(a0,a1,a2,a3), 输出字 B =(b0,b1,b2,b3),
B = τ(A)=(S_box(a0),S_box(a1),S_box(a2),S_box(a3))

### Feistel结构

- 优点
    - 函数可逆从而保证密码算法可逆
    - 函数对合从而保证密码算法对合
- 缺点
    - 扩散较慢，算法迭代2轮才能改变输入的每1位

    
## 6 分组密码的应用技术

### 计算机数据的特殊性

由于计算机数据存在明显的数据模式，即在明文相同、密钥相同则明文相同的道理，这些固有的数据模式会在密文中表现出来。
掩盖明文数据模式的方法：

- 预处理技术(随机掩盖)
- 链接技术

如果不能掩盖数据模式，即使采用安全的密码算法也是徒劳的。

分组密码用于数据加密存在短块问题，即明文长度不是分组密码的明文长度的整数倍时，则最后一块为短块。

### 分组密码的工作模式

#### 电码本模式ECB

直接利用分组密码对明文的各分组进行加密，是分组密码的基本工作模式。

- 缺点
    - 可能出现短块，需要特殊处理(如对齐分组等)
    - 暴露明文的数据模式

应用：适合加密密钥等短数据

#### 密文反馈链接模式CBC

1. 明密文链接方式

    设
    明文M = ($M_1, ..., M_i, ..., M_n$),
    密钥为K，
    密文C = ($C_1, ..., C_i, ..., C_n$),
    则：
    
    加密时，
    $$
    C_i = 
        \left\{
        \begin{matrix}
            E (M_i ⊕ Z, K),&     i = 1\\
            E (M_i ⊕ M_{i-1} ⊕ C_{i-1}, K),  & i =  2,...,n\\
            Z为初始化向量
        \end{matrix}
        \right.
    $$

    即使$M_i = M_j$，但一般都有$M_{i-1} ⊕ C_{i-1} ≠ M_{j-1} ⊕ C_{j-1}$，从而使$C_i ≠ C_j$，从而掩盖了明文中的数据模式。
    加密时，当$M_i$或$C_i$中发生一位错误时，自此以后的密文全发生错误，这种现象称为**错误传播无界**。
    解密时同可能出现传播无界。
    解密时，
    $$
    M_i = 
        \left\{
        \begin{matrix}
            D (C_i, K) ⊕ Z, &     i = 1\\
            D (C_i, K) ⊕ M_{i-1} ⊕ C_{i-1},  & i =  2,...,n\\
        \end{matrix}
        \right.
    $$
    
    错误传播无界的缺点：当磁盘发生一点损坏时将导致整个文件无法解密。
    错误传播无界的优点：可用于数据完整性、真实性认证。

2. 密文反馈链接模式

    磁盘文件加密和通信加密通常希望解密错误传播有界，这时可采用密文链接方式。
    
    设
    明文M = ($M_1, ..., M_i, ..., M_n$),
    密钥为K，
    密文C = ($C_1, ..., C_i, ..., C_n$),
    则：
    加密时，
    $$
    C_i = 
        \left\{
        \begin{matrix}
            E (M_i ⊕ Z, K),&     i = 1\\
            E (M_i ⊕ C_{i-1}, K),  & i =  2,...,n\\
            Z为初始化向量
        \end{matrix}
        \right.
    $$
    解密时，
     $$
    M_i = 
        \left\{
        \begin{matrix}
            D (C_i, K) ⊕ Z, &     i = 1\\
            D (C_i, K) ⊕ C_{i-1},  & i =  2,...,n\\
        \end{matrix}
        \right.
    $$
    
    加密时错误传播**无界**，解密时错误传播**有界**。
    $C_{i-1}$发生了错误，只影响$M_{i-1}$和${M_i}$发生错误，其余不错，因此错误传播有界。
    错误传播无界有利于完整性认证，有界有利于提高密码处理的可用性。

#### 输出反馈模式OFB

将一个分组密码转换为一个密钥序列产生器，从而可以实现用分组密码按流密码的方式进行加解密。

- 采用一个移位寄存器， $R_0$是初始内容，称为种子。
- E 是 DES 、 AES 、 SMS4等强密码，加密移位寄存器的内容，输出密文最右边的 s 位 作密钥，与明文模2再加密。
- 移位寄存器左移 s 位，密钥最右边的 s 位反馈到移位寄存器的右 s 位。 E再加密，再输出密钥。
- 如此继续，把分组密码转变成了序列密码。
![](../post_img/593025ccab644123cb001ac1)

- 如果分组密码是安全的，则产生的密钥序列也是安全的。
- 加解密都没有错误传播。
- 适于加密冗余度较大的数据，如语音和图象数据。
- 为了提高速度可输出最右边的 8 位。
- 但因无错误传播而对密文的篡改难以检测。
    
#### 密码反馈模式CFB

同样采用分组密码产生密钥序列。
![](../post_img/593025ccab644123cb001abf)

- 与 OFB 的不同是，把密文反馈到移位寄存器。
- 加密时若明文错了一位，则影响相应的密文错，这一错误反馈到移位寄存器后将影响到后续的密钥序列错，导致后续的密文都错。
- 解密时若密文错了一位，不仅影响相应的明文错，而且密文的这一错误反馈到移位寄存器后将影响到后续的密钥序列错，导致后续的明文都错。
- 因错误传播无界，可用于检查发现对明密文的篡改。

## 7 序列密码

![](../post_img/593025ccab644123cb001abe)

## 8 ？？

## 9、10 公钥密码

### 公开密钥密码的基本条件

- E和D互逆——保密条件
- $K_e$≠$K_d$且由$K_e$不能计算出$K_d$——安全条件
- E和D都高效——实用条件
- E(D(M))=M——保真条件

### 确保数据秘密性

发方：

- A 首先查 PKDB ， 查到 B 的公开的加密钥 $K_{eB}$ 。
- A 用 $K_{eB}$ 加密 M 得到密文 C ： C = E （ M ， $K_{eB}$ ）
- A 发 C 给 B 。

收方：

- B 接收 C 。
- B 用自己的 $K_{dB}$ 解密 ， 得到明文 M = D ( C ， $K_{dB}$ ) 。

安全性分析：

- 只有 B 才有 $K_{dB}$ ， 因此只有 B 才能解密，所以确保了秘密性。
- 任何人都可查 PKDB 得到 A 的 $K_{eA}$， 所以任何人都可冒充 A 给 B 发送数据。 不能确保真实性 。

### 确保数据安全性

发方：

- A 首先用自己的 $K_{dA}$ 对 M 解密， 得到 C =D( M ， $K_{dA}$ ) 。
- A 发 C 给 B 。

收方：

- B 接收 C 。
- B 查 PKDB 查到 A 的公开的加密钥 $K_{eA}$ 。
- B 用 $K_{eA}$ 加密 C ， 得到明文 M = E （ C ， $K_{eA}$ ）。

安全性分析：

- 只有 A 才有 $K_{dA}$ ， 因此只有 A 才能解密产生 C ， 所以确保了真实性 。
- 任何人都可查 PKDB 得到 A 的 $K_{eA}$ ，所以任何人都可加密得到明文。 不能确保秘密性 。

### 同时确保数据秘密性和真实性

发方：

- A 首先用自己的 $K_{dA}$ 对 M 解密， 得到 S ：S =D( M ， $K_{dA}$ )
- 查 PKDB ， 查到 B 的公开的加密钥 $K_{eB}$ 。
- 用 $K_{eB}$ 加密 S 得到 C ：C =E （ S ， $K_{eB}$ ）
- A 发 C 给 B 。

收发：

- B 接收 C 。
- B 用自己的 $K_{dB}$ 解密 C ， 得到 S ：S =D （ C ， $K_{dB}$ ）
- B 查 PKDB 查到 A 的公开的加密钥 $K_{eA}$。
- B 用 A 的公开的加密钥 $K_{eA}$ 加密 S ， 得到 M ：M =E （ S ， $K_{eA}$ ）

安全性分析：

- 只有 A 才有 $K_{dA}$ ， 因此只有 A 才能解密产生 S ， 所以确保了真实性 。
- 只有 B 才有 $K_{dB}$ ， 因此只有 B 才能获得明文，所以 确保了秘密性 。

### RSA参数选择

- p和q足够大，一般512b，从而n为1024b；重要1024，从而n为2048b
- p和q应为强素数
- p和q的差别要大
- (p-1)和(q-1)的最大公因子要小，否则易受迭代加密攻击
- e建议选择$2^{16} + 1$，因为二进制表示只含有两个1
- d不能太小，要足够大
- 不要许多用户公用一个n

例题
![](../post_img/593025ccab644123cb001ac2)

### Elgamal算法

- 准备：随机地选择一个大素数p，且要求p-1有大素数因子，再选择一个模p的本原元a，将p和a公开。
- 密钥生成：随机选择整数的作为保密的解密钥，2 <= d <= p-2，计算y=$a^d$ % p，取y为自己公开的加密钥
- 加密：随机选择整数k，2 <= k <= p-2，计算：
    - U = $y^k$ % p
    - $C_1$ = $a^k$ % p
    - $C_2$ = UM % p
    - 取C=($C_1$, $C_2$)作为密文
- 解密：计算V=$C_1^d$ % p，计算M=$C_2V^{-1}$ % p
- 安全性：k必须是一次性的
- 例题

![](../post_img/59302dc6ab644123cb001bf1)


## 11、12数字签名

## 13 Hash函数

## 14 认证

## 15 密码协议

## 16、17 密钥管理

密码体制的安全应当只取决于密钥的安全，而不取决于对密码算法的保密。
