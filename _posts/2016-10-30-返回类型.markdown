title: 返回类型
date: 2016-10-30 13:30:45
updated: 2017-02-21 16:00:26
tags:
- C++
categories:
- Study
- Computer
- PL
- C++
- Function
---

## 1 使用尾置返回类型

在c++11新标准中可以使用**尾置返回类型(trailing return type)**返回函数任何想要返回的类型。

任何函数的定义都能使用尾置返回，但是这种形式对于返回类型较复杂的函数最有效，如返回类型是数组的指针或引用。

- 尾置返回类型跟在形参列表后面并以一个**->**符号开头
- 为了表示函数真正的返回类型跟在形参列表之后，应该在原本的返回类型的地方放置一个*auto*

- 示例

   ```cpp
   //func接收一个int类型的形参，返回一个指针，该指针指向含有10个整数的数组
   auto func(int i) -> in(*)[10];
   ```

## 2 使用decltype

如果知道函数返回的指针指向哪个数组，就可以使用*decltype*关键字声明返回类型。

- 示例

   ```cpp
   int odd[] = {1, 3, 5, 7, 9};
   int even[] = {0, 2, 4, 6, 8};

   //返回一个指针，该指针返回指向含有5个整数的数组
   decltype(odd) *arrPtr(int i)
   {
       return (i % 2) ? &odd : &even;//返回一个指向数组的指针
   }
   ```

- *arrPtr*使用关键字*decltype*表示它的返回类型是个指针，并且该指针所指的对象与*odd*类型一致
- *decltype*并不负责把数组类型转换成对应的指针，所以其类型是个数组
- 想要表示*arrPtr*返回指针还必须在函数声明时加一个**\***
