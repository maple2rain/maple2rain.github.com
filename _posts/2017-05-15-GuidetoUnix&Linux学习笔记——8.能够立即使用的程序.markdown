---
layout: post
author: LPF
title: Guide to Unix & Linux学习笔记—— 8.能够立即使用的程序
date: 2017-05-15 21:38:23
updated: 2017-05-19 16:17:28
categories:
- Study
- Computer
- OS
- Linux
- Guide to Unix & Linux 
---
> Unix差不多有数千个不同的程序，这意味着可以输入数千条不同的命令，其中许多程序要求理解一些理论，如使用文件系统命令之前，就需要学习一些文件系统的知识。但是，还有一些程序不需要特殊的知识，而且使用起来也不是特别困难，本章就是介绍这样一些程序。

----------

# 在系统中查找程序

## which

查看某个命令是否可用的一个准确方法是使用`which`命令。`which`的目的在于指示对于一条具体的命令，shell将会执行哪一条程序，或者表示没有这个命令。
在使用`which`时，只需在键入的`which`命令跟**一个或多个**命令的名字即可，例如：

```sh
$ which date
$ which date less
```
下面是第一条命令的输出：

```sh
/usr/bin/date
```
在这个例子中，`which`命令指示，如果输入了`date`命令，那么shell将运行存储在`/usr/bin/date`文件中的程序。。
如果系统中不存在的程序，那么这条命令有两种可能性，取决于`which`的版本。第一种是，不发生任何事，即无任何输出。第二种是，显示错误消息，表明在搜索路径中找不到该程序，如查找不存在的程序**maple**，将有如下输出：

```sh
$ which maple
/usr/bin/which: no maple in (/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/maple/.local/bin:/home/maple/bin)
```

当出现这种情况时，一般是拼写错误，或是真的不存在该程序了，这是可以考虑安装您想指定的程序，或是添加搜索路径，看是否能找到该程序(有时可执行程序在当前目录下，为了方便，可以将当前目录添加进搜索目录)，方法如下(添加路径名为*yourpath*)：

```sh
$ echo $PATH=$PATH:yourpath
```

----------


## type

如果使用的shell是Bash，那么还可以使用另外一个备用命令`type`。
`type`用法和`which`类似，但有时候和会比后者显示更多的细节信息，这在特定的环境下还是挺有用处的，如再次查询`date`命令，输出结果如下：

```sh
$ type date
date is /usr/bin/date
```

如果对`which`和`type`分别使用`which`和`type`进行查询会产生什么结果呢？不妨自己亲手实践一下吧！🙂

----------

# 显示时间和日期:date

`date`命令用于显示当前的时间和日期，如下是一个样本输出，注意Unix使用的是24小时制时钟。

```sh
Mon 15 May 22:19:49 CST 2017
```
Unix还有一个`time`命令，但他不是用于显示时间，而是测试程序的运行时间。
有时候，为了显示UTC时间，可以添加`-u`选项，如
```sh
$ date -u
Mon 15 May 14:22:29 UTC 2017
```

----------

# 显示日历:cal

为了显示当前的月份，可以输入：

```sh
$ cal
      May 2017      
Mo Tu We Th Fr Sa Su
 1  2  3  4  5  6  7 
 8  9 10 11 12 13 14 
15 16 17 18 19 20 21 
22 23 24 25 26 27 28 
29 30 31    
```

显示某一年的日历时，需要指定年度，如：

```sh
$ cal 1952
```

为了显示某个特定月份的日历，需要这个月份指定一个位于**1~12**之间的数字，代表1~12月，并且还有指定年度，例如，指定1952年12月的日历的命令如下：

```sh
$ cal 12 1952
    December 1952   
Mo Tu We Th Fr Sa Su
 1  2  3  4  5  6  7 
 8  9 10 11 12 13 14 
15 16 17 18 19 20 21 
22 23 24 25 26 27 28 
29 30 31   
```

如果不希望显示日期，只希望得到这一天是这一年中的第几天，即从1~365编号(1月1日=1，2月1日=32，等等)，只需为`cal`添加`-j`选项即可，如：

```sh
$ cal -j 12 1952
       December 1952       
Mon Tue Wed Thu Fri Sat Sun
336 337 338 339 340 341 342 
343 344 345 346 347 348 349 
350 351 352 353 354 355 356 
357 358 359 360 361 362 363 
364 365 366    
```

顺便说一下，`-j`代表**儒略历(Julian)**，即每年有365或366天的现代日历的名称。

> 历史消失的11天
当查看1752年的9月份时，您将看到9月2日和9月14日之间有一个缺口，这个缺口有11天。具体详情可以查看[历史消失的十一天](http://www.360doc.com/content/15/1017/18/17817564_506319567.shtml)。

----------


# 查看系统信息

## uptime

该命令用来显示系统连续运行时间的有关信息。典型的输出如下：

```sh
$ uptime
22:56:58 up 12:36,  1 user,  load average: 0.37, 0.83, 0.91
```
在这个例子中，当前时间为`22:56:58`，系统已经运行了`12:36`，即运行了12小时又36分钟，而且当前有1个用户标识登录。最后三个数字展现了一直等待执行的程序的数量，分别是之前1分钟、5分钟和15分钟的平均数。这些数字能够表示系统的负载，负载越高，系统所做的工作越多。

----------


## hostname

`hostname`命令用来查看计算机的名称，如果经常登录不止一台计算机，那么该命令能够非常有用，有时会用来写邮件之类的，可以附上主机名。如果忘记了主机名，则可以输入`hostname`来查看。

----------


## uname {#uptimeid}

`uname`命令用于显示操作系统的名称，该命令的输出结果如下：

```sh
$ uname
Linux
```
如果要得到操作系统更多的信息，可以使用选项，解释如下：

|选项|解释|
|---|
|-a/--all|所有信息|
|-s/--kernel-name|内核名称，默认选项|
|-n/--nodename|在网络中的节点主机名|
|-r/--kernel-release|内核发行版本号|
|-v/--kernel-version|内核版本信息|
|-m/--machine|机器硬件名称|
|-p/--processor|处理器类型|
|-i/--hardware-platform|硬件平台|
|-o/--operating-system|操作系统|
 
 
----------

# 显示自己的信息:whoami

`whoami`命令显示您登录使用的用户标识。如果您有许多用户标识，而且忘记了正在使用的是哪个用户标识，那么使用这条命令非常便利。

----------

# 显示其他用户的信息

Unix计算机是共享的，大多数时间，系统会有多个用户同时登录。为了查看当前有哪些用户登录，Unix系统提供了几条命令。

## users

最简单的命令就是`users`，该命令运行之后将显示当前登录系统的所有用户标识。

## who

对于每个用户标识，`who`命令将显示终端的名称、用户标识的登录时间，而且如果合适的话，还会显示用户标识使用哪台远程计算机连接到系统上，典型输出如下：

```sh
$ who
maple    tty1         2017-05-15 10:20 (:0)
root     tty2         2017-05-16 14:40
```

在这个例子中，用户标识**maple**使用终端**tty1**登录，其中的(:0)表示为当前主机，**root**在终端**tty2**登录。

如果想要显示更多信息，可以使用选项，解释如下：

|选项|解释|
|---|
|-a/--all|所有信息|
|-b/--boot|最近一次系统启动时间|
|-d/--dead|僵死进程|
|-H/--heading|每一列的解释头|
|-l/--login|当前登录进程|
|--lookup|尝试通过DNS规范化主机名|
|-m|只有与stdin相关联的主机名和用户|
|-p/--process|由init生成的活动进程|
|-q/--count|统计所有已登录的用户数目|
|-r/--runlevel|当前运行级别|
|-s/--short|只输出用户标识，终端名称及登录时间(默认)|
|-t/--time|最近系统时钟改变|
|-T/-W/--mesg|为用户添加状态，如+、-和?|
|-u/--users|已登录用户|
 

----------

## w

如果希望查看系统上用户标识更多的相关信息，则可以使用`w`命令。`w`名称的含义是`Who is doing what?`。下面是一些样本输出：

```sh
$ w
 14:59:38 up 1 day,  4:39,  2 users,  load average: 0.50, 0.80, 0.83
USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
maple    tty1      Mon10   28:39m  6:05m  2.84s /usr/bin/tilix
root     tty2      14:40   17:38   0.04s  0.04s -bash
```
输出的第一部分显示系统统计信息，这一部分信息可以详见[uptime命令](#uptimeid)。
从第二行开始，是7列信息，分别解释如下：

|标题|解释|
|---|
|USER|当前登录系统的用户标识|
|TTY|各个用户标识使用的终端的名称|
|FROM|用户标识登录系统所使用的远程计算机的名称|
|LOGIN@|用户标识的登录时间|
|IDLE|用户上一次按键猴已经过去的时间，这段时间称为**空闲时间**|
|JCPU|自登录猴所有进程总共使用的处理器时间，其中*J*代表**jobs**|
|PCPU|当前进程所使用的处理器时间，其中*P*表示**process**|
|WHAT|当前正在运行的命令|

当然，也可以查看某一特殊用户标识当前正在做什么，只需在命令后接该用户标识即可，如下：

```sh
$ w maple
 15:11:10 up 1 day,  4:51,  2 users,  load average: 1.35, 0.76, 0.75
USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
maple    tty1      Mon10   28:50m  6:12m  3.27s /usr/bin/tilix
```

如果想要显示更多信息，可以使用选项，解释如下：

|选项|解释|
|---|
|-h/--no-header|不输出头部|
|-u/--no-current|在找出当前进程时忽略用户名cpu时间|
|-s/--short|输出短格式，不输出登录时间、JCPU、PCPU|
|-f/--from|标识登录的远程主机|
|-i/--ip-addr|在`FROM`域输出IP地址而不是远程主机名|
|-o/--old-style|旧式风格输出|
 
 

----------

# Reference

[1] Haeley Hahn. Unix & Linux 大学教程[M]. 张杰良, 译. 北京:清华大学出版社, 2010.1:142-152.
