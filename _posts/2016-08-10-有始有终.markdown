---
layout: post
author: LPF
title: 有始有终
date: 2016-08-10 20:20:16
updated: 2017-02-21 15:14:42
tags:
- Standard
categories:
- Study
- Computer
- Programmer
- standard
---

## 1 分配资源的例程也应该释放它
- 打开文件流也应该在同一地方关闭文件流
- 减少耦合性，减少因需求变更导致代码变化而使资源申请后不释放
 
## 2 嵌套分配资源

- 当例程需要不只一个资源时,应当对资源分配基本模式进行扩展
    - 以与资源分配的次序想法的次序解除资源的分配
        - 这样一来,当一个资源对另一个资源进行引用时,就不会造成资源被遗弃而不可用
    - 在代码的不同地方分配同一组资源时,总是以相同的次序分配它们,以避免死锁
 
## 3 指针设置为NULL
- 对于C和C++来说,在对某个内存块释放后,有可能又在程序中引用该内存.
    - 此时,该内存块可能已经分配用于其他目的,这将导致出错.
    - 而将指针置为NULL后,再引用该指针将出现运行错误.因此可以明显判断错误
- 对于Java来说,通过把对象变量设置为NULL,将会使被引用对象的指针数目减一.
    - 当指针数目计数为0时,对象就会符合垃圾收集的条件,被回收了.
    - 这样对于长期运行的程序来说,可以确保内存不会因时间而增长