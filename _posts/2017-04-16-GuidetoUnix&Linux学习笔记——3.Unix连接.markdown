---
layout: post
author: LPF
title: Guide to Unix & Linux学习笔记—— 3.Unix连接
date: 2017-04-16 20:51:55
updated: 2017-05-19 16:17:46
categories:
- Study
- Computer
- OS
- Linux
- Guide to Unix & Linux 
---
> Unix系统中一直都集成有连接不同类型计算机的功能。实际上，Unix拥有此能力是世界上拥有如此众多计算机网络的主要原因之一。

----------


# 人、机器

考虑一下生活中最常见的机器如电话、汽车、电视机及收音机等,因为您和机器是分离的实体,所以在使用机器时必须有一种方式使您和机器能够交互。我们称这种功能为`界面`(interface)。
每个人类使用的机器都可以分为两部分：界面和其他部件。
例如,对于桌面计算机而言,界面包括显示器、键盘、鼠标、扬声器和(可能的)麦克风。**其他部件**包括机箱里面的东西:硬盘、CD驱动器、处理器、内存、视频处理卡以及网络适配器等。
用Unix术语讲，界面称为`终端`(Terminal)，而将其他部件总称为`主机`(Host)。
因为终端提供界面，所以他有两个主要的任务：`接受输入`和`生成输出`。对于桌面计算机而言,输入设施包括键盘、鼠标和麦克风。输出设施包括显示器和扬声器。
为了掌握这些思想,我们可以通过下述两个简单的公式来描述所有的计算机系统:

    计算机 = 终端 + 主机
    终端 = 输入设施 + 输出设施
    

----------


# 价格昂贵的早期计算机

最初版本的Unix由Ken Thompson于1969年开发。Ken Thompson是位于新泽两州的贝尔实验室的一名研究员(当时,贝尔实验室属于AT&T公司)。他一直在从事一个大型的、复杂的项目,这个项日就是Multics,以麻省理工学院为中心。当贝尔实验室决定结束支持Multics时,Thompson返回到新泽西州继续从事他的全职工作,在那里他和其他几位研究人员决定创建他们自己的小型操作系统。特别是Thompson有一个他在Multics上开发的游戏,这个游戏就是Space Travel。他希望能够在自己的系统上运行这个程序。
早些时候，大多数计算机都是大型、昂贵、性能不稳定的机器，要求专用的程序员和管理员(称此类计算机为大型计算机)。
大型计算机要求有白己的特殊房间,这样的房间有一个古怪的名称,即**玻璃屋**(glass house)。大型计算机要求玻璃屋的原因有3个方面。

- 这种机器比较脆弱,它们需要一个能够控制温度和湿度的环境
- 这类计算机非常昂贵,通常要花费数百万美元。这样的机器如此之贵,因此不可能允许所有人自由地出入计算机房。玻璃屋可以上锁,从而可以防止除计算机操作员之外的其他人进出
- 这类计算机不仅复杂,而且还相当稀有

贝尔实验室将Thompson和其他研究人员迁回到新泽西州之后,研究人员知道他们再也没有办法接触到另一台大型计算机了。因此,他们开始寻找小的并且易于得到的计算机。
在那个时代,大多数计算机都要花费100 000美元,对于个人研究来说这并不是一件简单的事情。但是,1969年,Thompson在贝尔实验室搜寻后,发现了一台没有使用的PDP-7。
PDP-7由DEC公司(Digital Equipment Corporation，数字装备公司)制造,它是一种所谓的小型计算机(minicomputer)。相对于大型计算机而言,它尺寸比较小、价格比较便宜并且易于得到。按1965年美元价值计算,一台PDP-7的价格为72000美元,而GE-645大型计算机要花费大约1000万美元。名称PDP是**Programmed Data Processor**的缩写。
这台特殊的PDP-7是由一个项目订购的,但是这个项目比较混乱,所以Thompson可以霸占它。他编写了许多软件,从而使Space Travel能够运行。但是,PDP-7功能还不够强大,因此Thompson和其他几个爱好者开始寻找另外一台计算机。
最终,他们获得了一台较新的PDP-11。PDP-11是在1970年夏天交付的,其主要优点就是它的基本花费只有10800美元(合2008年64300美元)。Thompson和其他几位研究人员开始使用PDP-11,在数个月之内,他们将Unix移植到了这台新计算机上。
在使用当前软件的过程中,PDP-11最大的瓶颈之一就是一次只能运行一个程序。这意味着,每次只能有一个人使用机器。
解决方法就是改变Unix,从而使它能够允许一次运行多个程序。但是,这就没有那么简单了,直到1973年,这一目标才得到实现—— Unix成为一个完全成熟的`多任务处理`(multitasking)系统(多任务处理的旧名称叫`多道程序设计`(multiprogramming))。
从那时起离使Unix同时支持不止一个用户就只有一步之遥了,这一步就可以将Unix转换成一个真正的多用户系统(旧名称叫`分时系统`(time-share system)。实际上,在1974年,当Thompson和Ritchie发表第一篇描述Unix的论文时,他们称之为`Unix分时系统`。

----------


# 主机和终端

20世纪70年代初期,Ken Thompson和Dennis Ritchie面临一个问题。他们希望将Unix转换成一个真正的多任务、多用户操作系统。但是,这意味着每个用户都需要自己的界面。现在,高质量的彩色视频显示器、键盘以及鼠标都异常便宜。但是在那个时代,所有的东西都非常昂贵。计算机系统。中没有独立的键盘:没有鼠标;就算足计算机的显示器,价格也昂贵到无法为每个用户都提供一台。
Thompson和Ritchie意识到从概念上讲,他们能够将界面与系统的其他部分分离,而这就是他们设计Unix的方式。
在这种方式中,处理单元只有一个(他们称它为主机),界面单元有多个(他们称之为终端)。最初,主机是PDP-11,终端是Teletype(一种电传打字机)。但是,这只是为了方便。从原理上讲,Unix系统可以使用任意数量的主机和任意类型的终端(这样虽是可行的,但是不太实用)。
这一设计决策被证明具有先见之明。从一开始,Unix为用户和计算机之间达成的连接取决于一个具体的设计原则,而不是具体的硬件。这意味着,多年之后,不管出现了什么类型的新硬件,Unix的基本组织方式永远都不会改变。
随着终端的日益完美,人们可以将旧的终端拿去,在其位置上插入一个新的终端。随着计算机的日益复杂,功能日益强人,Unix也需要移植到新的主机上去,同时所有事情都继续按期望的方式工作。
下面将这一思想与微软公司的Microsoft Windows相比较。因为Windows是为单用户PC特别创建的,所以微软公司永远不能彻底地将终端和主机分开。最终的结果是，Windows没有那么优美、没有那么灵活,而且还永运拘泥于PC体系结构。相反,Unix是优美的、灵活的,而且还适用于任何类型的计算机体系结构。所以,在过了这么多年之后,Unix的终端/主机模式仍然在不可思议地应用着。

----------


# 终端室和终端服务器

Unix是一种多用户系统，这意味着可以有不止一个人同时使用计算机，只要满足以下两个条件：

- 每个人拥有自己的终端
- 终端与主机连接

因为Unix是设计用来支持多用户的，所以经常可以看见`终端室`内放满了`终端`，每台终端都连接到主机。当您希望使用计算机时,可以去终端室,等待一台空闲的终端。一旦您找到一台空闲的终端,就可以键入您的用户名和口令来登录系统。这一过程可概括如下图：

![终端室中的终端](../post_img/58f37b1cab64414e1d00205f)

一些组织,例如大学的各系或者公司,能负担起多台主机计算机。在这种情况下,允许用户从任意一台终端使用任何一台主机才有意义。为了实现这一目的,需要一台`终端服务器`(terminal server)。终端服务器是一台充当交换机的设备,用于将任意的终端连接到任意的主机。
为了使用终端服务器,您需要输入一条命令告诉终端服务器希望使用哪一台主机。然后终端服务器将您连接到那台主机。接下来您需要以正常的方式输入用户名和口令,并登录系统。
下图示范了这样一个系统。在这个图中,只给出了6台终端和3台主机。这或许有点不符合现实。在大型组织中,终端通常有数十台,遍布于整栋建筑物内,连接到多个终端服务器,从而允许访问许多不同的主机。

![连接到终端服务器的终端](../post_img/58f37b1cab64414e1d00205e)

----------


# 控制台

在所有连接到主机的终端中,有一台终端功能比较特殊。这台终端被认为是计算机本身的一部分,而且它是用来管理系统的。这个特殊的终端就是`控制台`(console)。一般的控制台为：直接连接到计算机的终端或者个人电脑的内置终端。
一般情况下，控制台由系统管理员使用来管理系统。
为什么我们需要了解控制台和普通终端呢?原因来自3方面：

- Unix系统总是区分控制台和普通终端
- 作为系统管理员，有一些特定的事情只能在控制台完成，不能通过远程终端进行
    - 如系统在启动过程中遇到了问题，那么只能通过控制台修复问题，这是因为，直到系统启动以后，才能通过远程终端访问系统
- 有时候Unix系统可能需要显示一个非常严重的错误信息，这样的信息显示在控制台上可以确保系统管理员能够看到他们

----------


# Unix连接

Unix被设计为终端于主机相分离，这意味着不止一个人可以在同一时间使用同一个Unix系统，只要每个人拥有自己的终端即可。那么，终端可以主机有多远？答案是，终端可以离主机任意远，但是前提是终端和主机之间必须有一个连接。
当使用自己的计算机连接到一台远程Unix主机时,您可以运行一个程序,使用您的硬件来`仿真`(emulate)终端。然后,这个程序通过网络连接到远程主机。
您可以在任意类型的计算机系统上这样做,包括Windows计算机、Macintosh计算机或者另一台Unix计算机。一般情况下,终端程序在自己的窗口中运行,而您可以拥有任意数量的独立窗口。
而连接，可以是任意一种网络连接方式，局域网、线缆、网络连接，甚至是无线连接。

----------


# 没有控制台的主机

如果计算机独自运行，不需要人类的`直接输入`，那么计算机就不需要终端，这样的计算机称为`无头系统`(Headless System)。
在Internet上,有许多运行的Unix主机没有终端。例如,有数百万个无头系统充当了Web服务器和电子邮件服务器,默默地做着自己的工作而不需要人类的干预。这些服务器大多数都运行着Unix,并且它们大多数都没有连接终端。
(`Web服务器`响应网页的请求,并向外发送合适的数据。`电子邮件服务器`发送和接收电子邮件。)
如果需要直接控制这样的主机计算机——例如需要配置机器或者解决问题——那么系统管理员只需简单地通过网络连接到主机。当系统管理员完成工作后,他只需断开主机的连接,让主机接着独自运行。
另外就是`路由器`：一种特殊用途的计算机，将数据由一个网络中继到另一个网络。在Internet中,路由器提供网络之间真正的连接。如果路由器出现问题该怎么办呢?在这种情况下,这是系统管理员的工作。他在自己的PC上打开一个终端窗口,连接到路由器,修复问题,然后再断开与路由器的连接。
一些拥有许多Unix服务器的大型公司使用一种不同的方法。它们将每个主机计算机的控制台连接到一台特殊的终端服务器上。通过这种方式,当出现问题时,系统管理员可以使用终端服务器直接登录到有问题的计算机。

----------


# 客户端/服务器关系

在计算机术语中,提供某种类型的服务的程序称为`服务器`,使用服务的程序称为`客户端`。客户端从服务器请求服务。
严格地说,客户端和服务器都是程序,不是机器。但是,非正式地讲,术语`服务器`有时候指运行服务器程序的计算机。

----------


# 按下键时发生的事情

随着您按下键,每个字母都会显示在屏幕上,因此可以很自然地猜测您的终端正在显示您键入的字母。实际上,情况并非如此。是主机,而不是终端负责将刚才键入的内容显示出来。每次按下键时,终端都向主机发送一个信号。然后主机做出响应,在屏幕上显示合适的字符(回显)。
当您使用鼠标时也会发生相同的事情。移动鼠标或者单击鼠标按键也会向主机发送信号。主机解释这些信号,并向终端发送回指令。然后终端在屏幕上进行合适的变化:移动指针、调整窗口大小、显示菜单等。
在大多数情况下,所有事情发生得如此之快,就好像键盘和鼠标直接连接到屏幕一样。
但是,如果使用一个长距离的连接,例如通过Internet,那么您有时候会注意到按键时间和看到字符显示在屏幕上的时间之间的延迟。当移动鼠标或者按鼠标按键,而屏幕没有立即更新时,也意味着发生了延迟。我们称这一延迟为`滞后`(lag)。
您或许会问,为什么Unix要设计成主机回显每个字符呢?为什么主机不会默默地接受它所接收的内容,而让终端处理回显呢?这样做将比较快速,从而避免滞后。
答案就是当主机进行回显时,您可以看到键入的内容被成功地接收,而且终端和主机之间的连接完整无缺。如果终端进行回显,那么当遇到问题时,您就不知道到主机的连接是否正常。当然,当您使用一台与主机物理分离的终端时这一点尤为重要。
抛开可靠性不说,Unix设计人员选择让主机进行回显还有另外一个原因。有一些特定的键(例如`Backspace`或者`Delete`),按下这些键可以修改刚才输入的内容。Unix的设计目的是要与许多不同的终端一起工作,因此操作系统本身以统一的方式处理按键才有意义,而不要让每种不同类型的终端以自己的方式处理按键。

----------


> 提示
当使用Unix时,您键入的字符通过主机回显到屏幕上,而不是通过终端,大多数时候,滞后量非常小,以至于您注意不到。但是,如果通过一个低速连接使用远程主机,那么您键入的字符显示在屏幕上之前存在一个延迟的情况会时有发生。
Unix允许提前键入许多字符,因此不用担心,您只需不停地键入,最终主机将捕获所有的输入。在几乎所有情况下,无论滞后有多长,内容都是不会有任何丢失的。

----------


# 字符终端和图形终端

多年以来,随着硬件的发展。Unix终端也越来越先进。键盘越来越完善并且更方便易用,而卷纸则被带有视频屏幕的显示器所替代。
然而,在很长一段时间内,Unix终端有一个基本特征没有改变:输入和输出只有一种形式,即字符(也称为`文本`)。换句话说,就是只有字母、数字、标点符号和几个特殊的控制键,但是没有图形。
一个只使用文本的终端被称为`字符终端`(character terminal)或者`基于文本的终端`(text based terminal)。随着PC技术的发展。出现了一种新类型的终端,即`图形终端`(graphics terminal)。图形终端在输入方面仍依靠键盘和鼠标,而在输出方面,它充分利用了视频硬件的优点。图形终端不仅可以处理文本,而且还可以显示任何可以使用小点在屏幕上进行绘制的内容:图形、几何形状、阴影、线条、彩色等。

----------


# Reference 

[1] Haeley Hahn. Unix & Linux 大学教程[M]. 张杰良, 译. 北京:清华大学出版社, 2010.1:33-47.