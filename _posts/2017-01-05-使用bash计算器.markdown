---
layout: post
author: LPF
title: 使用bash计算器
date: 2017-01-05 16:43:58
updated: 2017-01-05 17:21:30
tags:
- Linux Shell
categories:
- Study
- Computer
- OS
- Linux
- API
- Shell
- Base
---
## 1 bc的基本用法

**bash计算器**其实是允许在命令行输入浮点表达式、解释表达式、计算并返回结果的一种编程语言。
**bash计算器**能够识别：

- 数字(整数和浮点数)
- 变量(简单变量和数组)
- 注释(以**#**开始的行或C语言中的/*  */对)
- 表达式
- 编程语句(if-then语句等)
- 函数

可以使用**bc**命令访问**bash计算器**，输入**bc**指令后会出现版本信息并等待输入，如下：
![](../post_img/586e074bab6441209e004768)

## 2 浮点运算控制

浮点运算是由一个内建的称为**scale**的变量控制的，其控制小数的有效位数，默认为0。
![](../post_img/586e0756ab6441236e004692)

- 上述例子中，**-q**参数表示屏蔽版本信息
- 首先由输入表达式**12 * 5.4**开始，**bash计算器**会返回答案
- 之后计算**3.44 / 5**，结果显示为**0**，因为此时小数有效位数为**0**
- 将有效位改为**4**之后，便得到值**.6880**
- 最后输入**quit**退出**bash计算器**。

## 3 使用变量

**bash计算器**同样支持变量。
![](../post_img/586e0761ab6441209e004774)

- 上例定义了变量**var**的值为**10**，则在定义之后的整个**bash计算器**都可以使用该变量
- **print**语句允许打印变量和数字

## 4 在脚本中使用bc

### 4.1 基本格式

```sh
variable=`echo "[options;] [statements;] expression" | bc`
```

- 第一部分**options**允许设置变量，如**scale**
- **statements**用于定义局部变量；变量可能不止一个，可以用分号来分开他们；使用变量时无需使用**$**来引用他们。
- **expression**参数定义了通过**bc**执行的数学表达式。

    ```sh
    var=`echo "scale=4; tmp=2; 3.3 / tmp" | bc`
    echo $var
    ```
    ![](../post_img/586e0772ab6441209e004776)
    上述例子定义了**scale**为**4**，局部变量**tmp**(引号外部无法使用)为**2**，表达式为**3.3 / tmp**，并将计算结果赋予**var**。
### 4.2 内联输入重定向

对于很多运算时，在同一个命令行中列出多个表达式会有点麻烦，因此可以使用**内联输入重定向**来简化操作。

- 格式

    ```sh
    variable=`bc << marker
    [options]
    [statements]
    expressions
    marker`
    ```
