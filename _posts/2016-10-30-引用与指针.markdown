title: 引用与指针
date: 2016-10-30 13:28:36
updated: 2017-02-21 15:02:29
tags:
- C++
categories:
- Study
- Computer
- PL
- C++
---

## 1 引用与指针的不同之处
引用类型变量类似于指针，除了一个重要而且基本的不同之处：

- 指针指示内存中的地址
- 引用指示内存中的对象或值

从而，在指针上进行算术运算时自然而然的，而对引用做算术运算是不合适的。

## 2 c++中的引用类型变量
c++语言包括了一种特殊的指针类型，这种类型主要用于函数定义中的形参。c++的引用变量是一个总是被隐式间接引用的、具有固定值的指针。**因为c++引用类型是一个常量，所以在它的定义中它必须以某个变量的地址来做初始化，并且在初始化后，引用该类型变量不能再被设置为来引用任何其他变量**。隐式间接引用阻止了对引用变量的地址值的赋值。
当一个实参所对应的形参是引用类型时，调用函数不需要说明这个实参有什么与众不同，编译器会传递地址而非值给引用参数。

## 3 c++引用例子
```c++
int m;
int &n = m;
int *p = &m;
int *&r = p;//对指针的引用
```
- 上面的程序中，n是m的一个引用(reference),m是被引用物(referent)。
- n相当于m的别名，对n的任何操作就是对m的操作。
- n既不是m的拷贝，也不是指向m的指针，其实n就是m它自己。
- 而指针p是一个对象，可以被引用，修改r的值就是修改p的值，修改*r的值解释修改m的值
## 4 c++引用规则
1. 引用被创建的同时必须被初始化（**指针则可以在任何时候被初始化**）
2. 不能有NULL引用，引用必须与合法的存储单元关联（**指针则可以是NULL**）
3. 一旦引用被初始化，就不能改变引用的关系（**指针则可以随时改变所指的对象**）
4. 因为引用本身不是一个对象，所以不能定义引用的引用(**指针可以指向指针的指针**)

## 5 c++与java中引用类型的区别
- java中的引用变量是c++中引用变量形式的扩展，它使用了引用变量完全替代了指针，这是为了追求比c++更好的安全性。
- 不同于c++引用变量，为了能引用不同的类实例，可以给java中的引用变量赋值。
- 所以，它们不是常熟，所有java中的类实例都通过引用变量来引用，这事实上也是java中引用变量的唯一用途。

## 6 指针与引用的表示
- 在大多数较大型计算机中，指针和引用是存储于存储单位中的单个值。
- 在基于英特尔处理器的计算机中，指针和引用的地址分为两个部分，即段和偏移量。