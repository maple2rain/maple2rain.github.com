---
layout: post
author: LPF
title: 获得用户输入
date: 2017-01-05 17:00:10
updated: 2017-01-05 17:03:17
tags:
- Linux Shell
categories:
- Study
- Computer
- OS
- Linux
- API
- Shell
- User Input
---
## 1 基本读取

**read**命令接收从标准输入或另一个文件描述符的输入。
在收到输入后，**read**变量会将数据放进一个标准变量。

```sh
echo -n "Enter your name: "
read name
echo "Your name is $name."
```
![](../post_img/586e0b22ab6441209e0048d3)

**echo**命令使用了**-n**选项，他会一处字符串末尾的换行符，允许脚本用户紧跟其后输入数据。

- 命令行指定提示符

    **read**命令包含**-p**选项，允许直接在**read**命令行指定提示符：
    
    ```sh
    read -p "Enter your name: "name
    echo "Your name is $name."
    ```

    上述脚本将产生与第一个例子同样的结果。

- 分配变量

    **read**命令会为提示符输入的所有数据分配一个变量。
    或者在指定多个变量时，输入的每个数据值都会分配给下一个变量。
    当变量用完了而参数过多时，剩下的数据就会全部分配给最后一个变量。
    或者没有指定变量，那么**read**会将他接收到的任何数据都放进特殊环境变量**REPLY**中。

## 2 超时

使用**read**命令会有需要脚本一直等待用户输入的情况，incident可以使用计时器来退出。
使用**read**命令的**-t**选项可以指定一个计时器：

```sh
read -t seconds
```

其中，**seconds**指定了倒计时的秒数。
当计时器过期后，**read**命令会返回一个非零退出状态码。

- 字符计数

    可以让**read**命令对输入的字符计数，而非对输入过程计时。当输入达到预设的字符时，它会自动退出并将输入的数据赋给变量。：
    ```sh
    read -n1 variable
    ```

    上述例子将读取一个字符后就将他赋予**variable**，而且不用按回车。

## 3 隐藏方式读取

有时需要读取脚本用户的输入，但不想输入出现在屏幕上，如密码。
可以使用**read**命令的**-s**选项，其会使输入文本颜色设成跟背景色一样。

```sh
read -s password
```

上述例子中，输入提示符输入的数据不会出现在屏幕上，但会赋给变量，以便在脚本中使用。

## 4 从文本中读取

可以从文件里读取保存的数据，
每次调用**read**命令时，其会从文件中读取一行文本；当文件中没有内容时，命令会退出并返回非零退出状态码。
常见的方法是将文件运行**cat**命令后的输出管道直接传给含有**read**命令的**while**命令：

```sh
count=1
cat test.txt | while read line
do 
    echo "Line $count: $line"
    count=$[ $count + 1 ]
done
```

上述例子将依行输出**test.txt**的内容。