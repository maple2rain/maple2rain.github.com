title: Guide to Unix & Linux学习笔记—— 5.GUI：图形用户界面
date: 2017-04-17 14:34:22
updated: 2017-05-19 16:17:39
categories:
- Study
- Computer
- OS
- Linux
- Guide to Unix & Linux 
---
# 什么是GUI 

`图形用户界面`或者GUI是一个允许使用键盘、指点设备(鼠标、跟踪球或者触摸板)及显示器与计算机进行交互的程序。输入来自于键盘和指点设备,输出显示在显示器上。界面的设计不仅包含字符,还包含窗口、图形和图标(小图形)。而且所有这些东西都是可操控的。
在显示信息时,广义地讲,有两种类型的数据,即文本(字符)和图形(图像),因此将其命名为`图形用户界面`。
对于GUI来说,屏幕被分成许多有边界的区域,这些区域称为窗口。和真实的窗口一样。GUI窗口的边界通常是矩形的,但也并不总是如此。与真实的窗口不同,GUI窗口可以在屏幕上重叠,而且无论何时都可以改变它们的大小和位置。

----------


# X Window

`X Window`是一个为使用图形数据的程序提供服务的系统。X的根源可以追溯到20世纪80年代中期的MIT(Massachusetts Institute of Technology,麻省理工学院)。那时,麻省理工学院为了教学目的,希望构建一个包含图形工作站(功能强大的单用户计算机)的网络。然而,他们所面对的是来自众多不同厂商的不兼容的设备和软件所造成的混乱。
1984年,麻省理工学院制定了Athena计划,这是MIT、IBM(lnternational Business Machines Corporation,国际商用机器公司)和DEC(Digital Equipment Corporation,数字设备公司)研究人员之间的协作计划。他们的目标就是创建第一个标准化、网络化并且与具体硬件独立的图形操作环境。然后这个环境可以用来构建一个大型的、校园级的网络,称为Athena。为了建立Athena,麻省理工学院需要将大量的异构计算硬件连接到一个已运行的网络中,而且还要以一种适合于学生的方式来做。这要求Athena计划的开发人员将一群与具体厂商相关的复杂图形界面替换为一个单独的、设计良好的界面——一个他们希望成为工业标准的界面。
因为这是一个雄心勃勃的项目,所以他们决定将这个计划以及网络本身用希腊智慧之神Athena命名(Athena是智慧和战争之神,1984年Athena成为一个重要的联盟,一个希望将不同厂商生产的计算设备连接起来的联盟)。
最终,Athena计划在两个重要方面取得了成功。首先,Athena计划的程序员创建了一个与具体厂商无关且适合于网络的图形界面,他们称之为X Window。X Window逐步被广泛接受,后来还`成为工业标准`(尽管不是唯一的工业标准)。第二,程序员能够构建Athena网络并且成功地部署它,为麻省理工学院社区中数百台计算机提供服务。
为什么要告诉您这些呢?这是为了描述一个有趣的现象。当一个复杂的软件产品刚开始的时候,它还没有吸引众多的用户。这意味着开发人员不必考虑对许多人造成不便或者`破坏`使用该产品的程序,因此可以快速地对产品进行修改。一旦产品获得了大量的安装,而且程序员已经编写了大量依赖于该产品的软件,那么对软件进行重大修改就变得异常困难。
产品变得越流行,产品的发展就越慢。当越来越多的人以及越来越多的程序依赖于这个软件时,对它进行大修改就没有那么方便了。
要搞清所有这些现象,可以参考前面提及的一个原则:`大量的用户妨碍未来的发展`。这千真万确,而且值得牢记,因为这是软件设计的一个重要的长远原则,可是大多数人(人多
数公司)没有领会掌握。
X程序员所展现的是,`当您开发一个重要的产品而且希望它能持续很长一段时间时,在开头花大量的时间是值得的`。一个灵活的、深思熟虑的设计可以使产品的生命力持久。这也是一个编程原则,但是许多人没有领会到这一点。

----------


> 名称含义 
**X Window、X**
X Window起源于由斯坦福大学开发的一个特定操作系统。这个系统称为**V**,由斯坦福大学的分布式系统小组(Distributed System Group)在1981年至1988年期同开发。
当为V系统开发窗口界面时,这个窗口界面称为**W**。一段时间过后,W程序被送给一名麻省理工学院的程序员。这名程序员以W为基础开发了一种新的窗口系统,即X。
从那时起,程序的名称就没有改变过,原因或许有两方面,第一,Unix系统的名称通常以**x**或者**ix**结尾,而且X Window主要在Unix中使用。第二,如果不停地变换名称,那么再有两个字母就到达字母表的末尾了。
最后还请注意,谊系统的正确名称是X Window,不是X Windows。

----------


# 抽象层次

X Window是一种可移植的、与硬件无关的窗口系统,可以运行在许多不同类型的计算设备。此外，X可以运行在几乎所有类型的UNix以及特定的非Unix系统上(例如Open VMS,最初由DEC公司开发)。
为了实现这一目标,x的设计人员使用了计算机程序员所谓的`抽象层次`(layer of abstraction)。这一思想就是依靠层次定义一个大的整体目标,层次可以形象化为从底部向上的堆叠,一个层次堆在另一个层次的上面。每个层次为其上一层次提供服务,从其下一层次请求服务。层次之间没有其他交互作用。
下面快速地看一个抽象例子,然后再讨论具体的事情。假设一个计算系统由5个层次构成:A、B、C、D和E。层次E位于底部,层次D位于E之上,层次C位于D之上,依此类推。层次A位于项部。
运行在层次A中的程序调用运行在层次B(而且只能是层次B)中的程序,以执行不同的服务;层次B中的程序则调用层次C(而且只能是层次C)中的程序;依此类推。
这样一个系统设计好了以后,意味着如果一名程序员工作在层次C上,那么他不必了解其他的层次以及它们的功能。他所需知道的就是如何调用层次D中的服务,以及如何为层次B提供服务。因为他只关心自己所在层次的细节内容,所以他不用在意是否有人修改了层次A或者层次E的内部。

----------


# 窗口管理器

从一开始,X Window就被设计成GUI和硬件之间的标准化界面。就其本身而言,X还不能提供图形界面,也没有任何描述用用户界面应该是什么样子的规范。提供实际的GUI是另一个程序的任务,这个程序就是`窗口管理器`(window manager)。
窗口管理器控制着窗口和其他图形元素(按钮、滚动条、图标等)的外观和特征。X充当窗口管理器和实际硬件之间的桥接器。
例如，假设窗口管理器希望在显示器的屏幕上画一个窗口,它向X发送请求以及相关的规格(窗口的形状、窗口的位置、边界的厚度、颜色等)。X绘制窗口,一旦任务完成就向窗口管理器返回一条消息。
通过这种方式,窗口管理器不必知道任何有关窗口如何绘制的事情。这是X的工作。同理,X也不用知道任何有关实际GUI如何创建的事情。这是窗口管理器的工作。

----------


# 桌面环境

GUI的强大来源于能够提供一个工作环境,在这个环境中,您可以以一种易于理解并且满足您需求的方式操纵各种元素。为此,您的界面需要一个底层逻辑,一个允许您在工作时用来解决问题的逻辑。
在X的早期,人们直接与窗口管理器交互。但是,由窗口管理器提供的基本GUI只有那么多。它不能帮助您完成与现代计算机使用相关的复杂认知任务。后者是一个更复杂的系统的工作,这个系统就是`桌面环境`(desktop environment),有时候也叫`桌面管理器`(desktop manager)。
桌面环境允许您回答这样的问题,即:我如何启动一个程序?当我不希望看到一个窗口时,如何移动或者隐藏它?当我记不清文件的位置时,如何查找一个文件?如何将图标从一个位置移动到另一个位置上?如何对文件和程序进行优先级设定,从而使那些最重要的文件和程序能够方便地找到?
下面举一个具体的例子。在窗口管理器中可以处理鼠标的移动以及图标和窗口的显示,桌面环境则允许我们使用鼠标拖动图标,并将图标放在窗口上。在做这个动作时,是桌面环境为拖放思想引入了含义。

----------


# 抽象层次：继续

下图示范了支持典型Unix GUI的抽象层次。在底部,X Window调用操作系统的设备驱动程序与硬件进行实际的通信。在顶部,用户及其运行的程序在需要时调用桌面环境。

![抽象层次](../post_img/58f46e92ab64415134003489)

在Unix中,可以认为图形工作环境是一个包含各种层次的程序和硬件的系统。在最顶部的层次,是应用程序(包括实用工具)以及用户,下一层次是桌面环境。桌面环境下面是窗口管理器,等等,在最底部是实际的计算机,从哲学上讲,我们可以认为整个系统是人类硬件和计算硬件之间的桥接。
这个模型有两个重要的概念我希望强调一下。首先,正如前面所讨论的,在特定层次所发生事情的细节与其他任何层次完全无关。其次,只有相邻层次之间才使用明确定义的接口发生通信。
例如,窗口管理器只与它下面的X Window和它上面的桌面环境进行通信。这足以满足要求,因为窗口管理器不须关心其他任何层所发生事情的细节。它只响应上一层次(桌面环境)的请求,并且调用下一层次(X Window)来服务它自己的请求。

----------


> 提示
**HarIey Hahn关于帮助他人选择计算机的原则**
1. 当您为他人选择一台个人使用的计算机时,为他们选择一台满足他们的心理和情感需求的系统。
在大多数情况下,他人可能不会清晰地表明他们的需求,因此您必须白己推断出他们的需求。在这个过程期间,不要陷入硬件清单或者其他琐事的长谈阔论中。
2. 当您为他人选择一台公司使用的计算机时,选择一个与批准这一开支的人的心理相一致的系统,在企业环境中,人员流动频繁,因此不要基于特定用户的需求选择系统,选择一台适合公司的系统即可。
选择系统的最好方法就是挑选一台满足支票填写人的心理和情感需求的计算机,而不是使用这台计算机的那个人。当与小企业打交道时,这一点尤为正确。

----------
# Reference 

[1] Haeley Hahn. Unix & Linux 大学教程[M]. 张杰良, 译. 北京:清华大学出版社, 2010.1:65-80.