---
layout: post
author: LPF
title: 随机等概率的输出m个不重复的数
date: 2017-03-13 19:04:44
updated: 2017-03-13 19:29:19
tags:
- Algorithm
categories:
- Study
- Algorithm
---
> 从0...n - 1中，随机输出m个不重复的数(n 远远大于m)。

## 1 随机数种子

关于随机数，不可避免要谈到随机数生成器及初始化。对于随机数生成器初始化，常用的有srand函数(`void srand(unsigned int seed)`)。对于每一个不同的`seed`，每一次调用生成器函数`rand`将会产生不同的随机数序列，每一次初始化时，都会将生成器初始化为初始值，即两次用同一个种子初始化生成器时，生成的随机数将相同。为了产生真正的随机数，`srand`一般用`time(0)`来作为`seed`。

## 2 随机数生成器

随机数生成器函数为`rand`(`int rand(void)`)。其用于产生一个0～RAND_MAX的随机数，而随机数的算法依赖种子`seed`。如果要产生一个特点区间的随机数，则可以用modulo的方法。

```c
v1 = rand() % 100;         // v1 in the range 0 to 99
v2 = rand() % 100 + 1;     // v2 in the range 1 to 100
v3 = rand() % 30 + 1985;   // v3 in the range 1985-2014
```

## 3 等概率产生随机数的方法

首先是实现代码。

```c++
knuth (int n, int m) {
    srand((unsigned int)time(0);
    for (int i = 0; i < n; ++i) {
        if (rand()%(n-i) < m) {
            cout << i << endl;
            m--;
        }
    }
}
```

　　由这个for循环循环n次，且在满足条件时才输出i，可知，输出m个不同值的要求已满足，因为每次输出的都是i值，而i值每次都是不一样的，`m--`保证了程序在输出了m个值后就停止循环。

　　在`i = 0`时，`rand() % (n - i)`的取值范围为`0～n-1`，共`n`个数，此时要输出0只需要`rand() % (n - i)`小于m，故`i = 0`被输出的概率为`m / n`;
　　
　　在`i = 1`时，`rand() % (n - i)`的取值范围为`0～n-2`，共`n - 1`个数，若`i = 0`没有被输出，则`m--`未被执行，此时`i = 1`被输出的概率为`m / (n - 1)`，若`i = 0`已经被输出了，则m变为`m - 1`，此时i=1被输出的概率为`(m - 1) / (n - 1)`；由概率论的知识，可知此时`i = 1`被输出的概率为
`P = (1 - m / n) * (m / (n - 1)) + (m / n) * ((m - 1) / (n - 1)) = m / n`；以此类推，可知每个数被输出的概率都为`m / n`。 