title: RedHat编译内核
date: 2017-01-05 17:26:19
updated: 2017-01-05 17:31:30
tags:
- Kernel
categories:
- Study
- Computer
- OS
- Linux
- Kernel
---
##1 检查硬件环境与内核功能要求
在进行内核编译之前，得先知道为什么需要编译内核，即你的需求是什么。接下来便是考察你的硬件系统，以便能编译出适合你的电脑且满足你功能需求的内核。

##2 保持干净源代码
在编译前，先得要清除内核源代码下面的残留文件，如之前编译过程产生的目标文件以及设置文件。使用下面的命令进行清除。
`make mrproper`

**注意：**这个操作会将之前进行过的内核功能选择文件也删除掉，所以几乎只有第一次执行内核编译前才进行这个操作，其余的时刻，若想删除残留数据，只要执行下列命令即可。
`make clean`

##3 挑选内核功能
启用内核功能菜单便可对内核功能进行挑选，前提是进入到源代码目录下，shell否则不知道你想要执行哪个内核编译。方法如下：
`make menuconfig`
![](../post_img/586e1140ab6441236e0048f3)

##4 内核的编译与安装
###4.1 编译参数
内核的编译过程其实很简单，可以先使用下列命令去查阅编译参数。
`make help`

###4.2 编译过程
* 先清除临时文件：`make clean`
* 再编译内核：    `make bzImage(经压缩过的内核)` 或 `make vmlinux(未经压缩的内核)`
* 最后编译模块：  `make modules`

##5 安装实际模块
* 如果同一个版本的模块被反复编译，则在安装时有可能会发生冲突，解决方法是：
    - 先将旧的模块目录改名，然后才安装内核模块到目标目录去。
    - 在"make menuconfig"时，将"General setup"内的"Local version"修改成新的名称。
   
 一般建议使用第二种方法。

###5.1制作模块以安装
使用以下命令进行制作模块的步骤
`make modules_install`

###5.2 安装模块
使用以下命令将编译好的内容安装到指定的位置中
`make install`

##6 编译总结
最后，可能会出现几个ERROR，原因可能是你没有安装这些模块，但这并不影响编译后的内核正常运行，此时进行重启即可。
如若不行，则需要进入其他系统或进入**grub**来抢修了。

##7 增加额外模块
###7.1 增加硬件额外模块

* 当某些驱动程序需要更换时，可以先去官网下载源码
* 将其解包后，查看使用帮助(一般是README文件)
* 然后进行安装 `make clean modules install` 等等
* 最后更新模块依赖性就可以了 `dempod -a`
    
###7.2 旧源码编译
当发现忘记加入某个功能或突然想要加入一些功能的话，可以将要加入的模块编译后加入。
* 在内核源代码所在目录打开内核功能菜单，即执行`make menuconfig`
* 执行编译 `make 模块名称` 
    * 注意要注明包含关系，如NTFS是在fs下的，因此要使用`make fs/ntfs/`
* 将编译出来的模块拷贝到相应内核的目录下即可，如"<font color=red>/lib/modules/2.6.32.70Linuxself/kernel/fs/ntfs/</font>"
* 最后再更新模块依赖性就可以了 `dempod -a`。
    