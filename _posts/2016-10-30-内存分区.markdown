---
layout: post
author: LPF
title: 内存分区
date: 2016-10-30 15:53:57
updated: 2017-05-06 17:33:54
tags:
- OS
categories:
- Study
- Computer
- OS
- Memory
---

## 1 碎片


### 1.1 内部碎片


被装入的数据块小于分区大小，导致分区内部有空间浪费，这种现象称为内部碎片(internal fragmentation)现象。


### 1.2 外部碎片


内存中出现很多空洞，随之时间推移，内存中产生了越来越多的碎片，使得内存的利用率随之下降，不可使用的区域越来越多，这种现象称为外部碎片(external fragmentation)现象。


### 1.3 压缩


克服外部碎片的一种技术是**压缩(compaction)**：


- 操作系统不时地移动进程，使得进程占用的空间连续，并且所有空闲空间连成一片
- 压缩是一个非常费时的过程，且浪费了处理器时间
- 压缩需要动态重定位的能力，即把程序从主存的一块区域移动到另一块区域，而不会使程序中的内存访问无效


## 2 动态分区放置算法


|   算法   |                          描述                          |           优点           |                                                                 缺点                                                                 |
|----------|--------------------------------------------------------|--------------------------|--------------------------------------------------------------------------------------------------------------------------------------|
| 最佳适配 | 选择与要求的大小最接近的块                             |                          | 性能最差，尽管每次存储请求总是消耗最小的存储空间<br>但结果却使得主存很快被分成许多很小的块<br>而这些块通常小到不能满足任何内存分配请求 |
| 首次适配 | 从开始扫描内存，选择大小足够的第一个可用块             | 简单<br>通常是最好和最快的 | 会使得内存的前端出现很多小的空闲分区<br>并且每当进行首次适配查找时，都要进过这些分区                                                 |
| 邻近适配 | 从上一次放置的位置开始扫描，选择下一个大小足够的可用块 |                          | 导致位于存储空间末尾的最大空闲存储块很快被分裂成小碎片                                                                               |


## 3 替换算法


### 3.1 伙伴系统


在伙伴系统中，可用内存块的大小为 $2^K$， $L<=K<=U$，其中，

- $2^L$表示分配的最小块的尺寸
- $2^U$表示分配的最大块的尺寸
- 通常$2^U$是可分配的整个内存的大小

### 3.1.1 算法步骤


1. 开始时，可用于分配的整个空间被看做是一个大小为$2^U$的块。
2. 如果请求的大小*s*满足$2^\left(U-1\right) < s <= 2^U$，则分配整个空间。
3. 否则，该块被分成两个大小相等的伙伴，大小均为$2^\left(U-1\right)$。
4. 然后继续匹配，如果请求的大小*s*满足$2^\left(U-2\right) < s <= 2^\left(U-1\right)$，则分配两个伙伴中的任何一个。
5. 否则，继续拆分其中一个伙伴并继续匹配，直到产生大于或等于*s*的最小块，并分配该请求。


在任何时候，伙伴系统中维护着一系列未分配的块。

- 如果满足有两个相同大小的块，则将这对伙伴合并成一个更大的块。
- 伙伴系统克服了固定分区和可变分区方案的缺陷，但在当前操作系统中，基于分页和分段机制的虚拟内存更高级。
- 但伙伴系统在并行系统中，是并行程序中分配和释放的一种有效方法。


## 4 分页和分段的特点

![分页和分段的特点](../post_img/58f7234fab64414e1d006851)
