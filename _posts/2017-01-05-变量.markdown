---
layout: post
author: LPF
title: 变量
date: 2017-01-05 16:40:23
updated: 2017-01-05 17:01:42
tags:
- Linux Shell
categories:
- Study
- Computer
- OS
- Linux
- API
- Shell
- Base
---
## 1 环境变量

可以在环境变量名称之前使用**$**来在脚本中使用这些环境变量。

```sh
#!/bin/bash
echo "USER info for userid: $USER"
echo UID: $UID
echo HOME: $HOME
```

上述例子引用了环境变量**USER**、**UID**、**HOME**。
![](../post_img/586e070aab6441209e00474d)

- 使用**$**

    而当要使用**$**时，由于脚本会自动认为是在引用一个变量，因此会产生错误，此时可以使用**\\**来使其失去**引用**的作用。

    ```sh
    #!/bin/bash
    echo "It cost \$15"
    ```
![](../post_img/586e0716ab6441236e004680)
    

## 2 用户变量

除了环境变量，**shell**还允许在脚本中定义和使用自己的变量。
定义变量允许临时存储数据并在整个脚本中使用。

### 2.1 变量规则

- 用户变量可以是任何不超过20个字母、数字和下划线的文本字符串
- 用户变量区分大小写
- 值通过**=**赋值，并且在变量、等号和值之间不能出现空格

### 2.2 数据类型

**shell**脚本会自动决定变量值的数据类型。
在脚本的整个生命周期里，变量会一直保持着他们的值，直到**shell**脚本完成。

### 2.3 引用变量

类似于系统变量，用户变量可通过**$**引用：

```sh
days=10
guest="Maple"
echo "$guest checked in $days ago"
```
运行脚本时会有如下输出：
![title](../post_img/586e0724ab6441209e004756)

- 注意

    在引用一个变量值来对其他变量赋值时，仍需要使用**$**来引用：
    
    ```sh
    guest1="Maple"
    guest2=$guest1
    guest3=guest1
    echo "$guest2 's name is the same as guest1"
    echo "$guest3 's name is not the same as guest1"
    ```
    运行脚本时会有如下输出：
    ![](../post_img/586e0732ab6441209e00475a)

## 3 特殊变量
 
|变量|    含义|
|---|---|
|$0    |当前脚本的文件名|
|$n    |传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是\$1，第二个参数是\$2。|
|$#    |传递给脚本或函数的参数个数|
|$*    |传递给脚本或函数的所有参数|
|$@  |  传递给脚本或函数的所有参数。被双引号(" ")包含时，与 $* 稍有不同，会将参数整体分隔开，而$*只认为是一个参数|
|$?  |  上个命令的退出状态，或函数的返回值|
|$$|    当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID|